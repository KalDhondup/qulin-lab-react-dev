[{"C:\\Users\\kalsang\\Desktop\\WEB PROJECTS\\qulin-lab-react-dev\\src\\index.js":"1","C:\\Users\\kalsang\\Desktop\\WEB PROJECTS\\qulin-lab-react-dev\\src\\reportWebVitals.js":"2","C:\\Users\\kalsang\\Desktop\\WEB PROJECTS\\qulin-lab-react-dev\\src\\components\\App.js":"3","C:\\Users\\kalsang\\Desktop\\WEB PROJECTS\\qulin-lab-react-dev\\src\\components\\ScrollableTabs\\ScrollableTabs.jsx":"4","C:\\Users\\kalsang\\Desktop\\WEB PROJECTS\\qulin-lab-react-dev\\src\\components\\ScrollableTabs\\Tab.jsx":"5"},{"size":511,"mtime":1607712142345,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":465,"mtime":1607715877035,"results":"9","hashOfConfig":"7"},{"size":4623,"mtime":1607721195855,"results":"10","hashOfConfig":"7"},{"size":657,"mtime":1607719684940,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"yjalz9",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\kalsang\\Desktop\\WEB PROJECTS\\qulin-lab-react-dev\\src\\index.js",[],["26","27"],"C:\\Users\\kalsang\\Desktop\\WEB PROJECTS\\qulin-lab-react-dev\\src\\reportWebVitals.js",[],"C:\\Users\\kalsang\\Desktop\\WEB PROJECTS\\qulin-lab-react-dev\\src\\components\\App.js",["28"],"import logo from './../assets/icons/logo.svg';\nimport './App.css';\nimport ScrollableTabs from './ScrollableTabs/ScrollableTabs';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        Demo Container\n      </div>\n\n      <div style={{ width: '80%' }}>\n        <ScrollableTabs defaultTabCounts={3} maxTabCounts={10} defaultTabWidth={300} defaultStyle={{ height: 36, backgroundColor: 'gray' }} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\kalsang\\Desktop\\WEB PROJECTS\\qulin-lab-react-dev\\src\\components\\ScrollableTabs\\ScrollableTabs.jsx",["29"],"import React, { Component } from 'react';\r\nimport './scrollableTabs.css';\r\nimport Tab from './Tab';\r\nimport add from './../../assets/icons/add.svg';\r\n\r\nexport default class ScrollableTabs extends Component {\r\n  tabId = 0;    // tab id base index \r\n  tabGroupElment = null;    // parent dom with all tabs as child node\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(props);\r\n\r\n    this.state = {\r\n      tabs: this.createDefaultTabs(),\r\n      chevronHidden: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.createDefaultTabs();\r\n    this.tabGroupElment = document.querySelector('#tabGroup');\r\n    this.createModalRoot();\r\n  }\r\n\r\n  createDefaultTabs = () => {\r\n    // creates default tabs\r\n    let tempTabs = [];\r\n\r\n    for (let i = 0; i < this.props.defaultTabCounts; i++) {\r\n      tempTabs.push(this.createNewTab());\r\n    }\r\n\r\n    return [...tempTabs];\r\n  }\r\n\r\n  createNewTab = (title = '') => {\r\n    // creates new tab\r\n    return {\r\n      id: ++this.tabId,\r\n      title: title ? title : `Tab${this.tabId}`,\r\n      removeTab: this.removeTab\r\n    }\r\n  }\r\n\r\n  removeTab = (id) => {\r\n    // remove selected tab component from the tabs list\r\n    if (this.state.tabs.length > 1) {\r\n\r\n      if (window.confirm('Are you sure you want to remove this tab?')) {\r\n        this.state.tabs.splice(this.state.tabs.findIndex(tab => tab.id === id), 1);\r\n        this.setState({\r\n          tabs: [...this.state.tabs],\r\n        }, () => {\r\n          this.setState({\r\n            chevronHidden: this.setChevronVisibility(),\r\n          });\r\n        });\r\n\r\n      }\r\n\r\n    } else {\r\n      alert('This is the last tab and can not be removed');\r\n    }\r\n\r\n  }\r\n\r\n  addNewTab = () => {\r\n    // adds new tab to the scrollable tab \r\n\r\n    if (this.state.tabs.length < this.props.maxTabCounts) {\r\n      this.setState({\r\n        tabs: [...this.state.tabs, this.createNewTab()],\r\n      }, () => {\r\n        this.setState({\r\n          chevronHidden: this.setChevronVisibility(),\r\n        });\r\n      });\r\n    } else {\r\n      alert(`Tabs max limit is ${this.props.maxTabCounts}`);\r\n    }\r\n\r\n  }\r\n\r\n  createModalRoot = () => {\r\n    // creating <div id=\"modal-root\"></div> in body\r\n\r\n    if (!document.querySelector(\"#scrollableTab-modal-root\")) {\r\n      let modalRoot = document.createElement('div');\r\n      modalRoot.setAttribute('id', 'scrollableTab-modal-root');\r\n      document.querySelector('body').appendChild(modalRoot);\r\n    }\r\n  }\r\n\r\n  scrollLeft = () => {\r\n    // \r\n    this.tabGroupElment.scroll({ left: this.tabGroupElment.scrollLeft - this.props.defaultTabWidth, behavior: 'smooth' });\r\n  }\r\n\r\n  scrollRight = () => {\r\n    this.tabGroupElment.scroll({ left: this.tabGroupElment.scrollLeft + this.props.defaultTabWidth, behavior: 'smooth' });\r\n  }\r\n\r\n  setChevronVisibility = () => {\r\n    // hide chevron btns if tab's are not exceding the scrollalble bar width\r\n    if (this.tabGroupElment.scrollWidth <= this.tabGroupElment.clientWidth) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'scrollableTab'} style={this.props.defaultStyle}>\r\n        <span className={`btnIcons ${this.state.chevronHidden ? 'hidden' : ''}`} onClick={this.scrollLeft}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"auto\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-left\"><polyline points=\"15 18 9 12 15 6\"></polyline></svg>\r\n        </span>\r\n\r\n        <div className={'tabs'} id=\"tabGroup\">\r\n          {this.state.tabs.map((tab, index) => <Tab key={`Tab${index}`} tabInfo={tab} defaultStyle={{ minWidth: this.props.defaultTabWidth, maxWidth: this.props.defaultTabWidth }} />)}\r\n        </div>\r\n\r\n        <span className={`btnIcons ${this.state.chevronHidden ? 'hidden' : ''}`} onClick={this.scrollRight}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"auto\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-right\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>\r\n        </span>\r\n        <span className={'btnIcons'} onClick={this.addNewTab}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" height=\"auto\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus\"><line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\kalsang\\Desktop\\WEB PROJECTS\\qulin-lab-react-dev\\src\\components\\ScrollableTabs\\Tab.jsx",[],["30","31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":12},{"ruleId":"36","severity":1,"message":"40","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":11},{"ruleId":"32","replacedBy":"41"},{"ruleId":"34","replacedBy":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'add' is defined but never used.",["43"],["44"],"no-global-assign","no-unsafe-negation"]